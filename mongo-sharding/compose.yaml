name: mongo-sharding
services:

  shard1_0:
    image: mongo:latest
    container_name: shard1_0
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard1_0-data:/data/db
    command:
      [
        "--shardsvr", //запуск в режиме шардинга
        "--replSet",
        "shard1", //название реплики
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1_1:
    image: mongo:latest
    container_name: shard1_1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard1_1-data:/data/db
    command:
      [
        "--shardsvr", //запуск в режиме шардинга
        "--replSet",
        "shard1", //название реплики
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1_2:
    image: mongo:latest
    container_name: shard1_2
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.6
    volumes:
      - shard1_2-data:/data/db
    command:
      [
        "--shardsvr", //запуск в режиме шардинга
        "--replSet",
        "shard1", //название реплики
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2_0:
    image: mongo:latest
    container_name: shard2_0
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 173.17.0.5
    volumes:
      - shard1_0-data:/data/db
    command:
      [
        "--shardsvr", //запуск в режиме шардинга
        "--replSet",
        "shard2", //название реплики
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2_1:
    image: mongo:latest
    container_name: shard2_1
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 173.17.0.4
    volumes:
      - shard1_1-data:/data/db
    command:
      [
        "--shardsvr", //запуск в режиме шардинга
        "--replSet",
        "shard2", //название реплики
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2_2:
    image: mongo:latest
    container_name: shard2_2
    restart: always
    ports:
      - "27023:27023"
    networks:
      app-network:
        ipv4_address: 173.17.0.3
    volumes:
      - shard1_2-data:/data/db
    command:
      [
        "--shardsvr", //запуск в режиме шардинга
        "--replSet",
        "shard2", //название реплики
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  
  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos", //обычная mongo в режиме роутера
        **"--configdb", 
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard1_0-data:
  shard1_1-data:
  shard1_2-data:
  shard2_0-data:
  shard2_1-data:
  shard2_2-data:
